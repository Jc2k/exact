#!/bin/bash
# $Id: regress,v 1.5 2004/03/27 13:14:47 doug Exp $
# regression test sets for EXACT
# note: this script isn't portable, and may blow up on you.
#       it's really designed for my own regression tests.

regdir=`pwd`/t

DEBUG=""
[ "$1" == "-d" ] && DEBUG=1

mkconfig () {
    
    # create the regression config file
    sed -e "s,@datadir\@,$pkgdatadir,g"             \
        -e "s,@prefix\@,$prefix,g"                  \
        -e "s,@localstatedir\@,$localstatedir,g"    \
        -e "s,@sysconfdir\@,$sysconfdir,g"          \
        -e "s,@ac_cv_user\@,$username,g"            \
        -e "s,@ac_cv_group\@,$groupname,g"          \
        -e "s,@ac_cv_watch\@,$watchfile,g"          \
        -e "s,@ac_cv_authtype\@,$authtype,g"        \
        -e "s,@ac_cv_server\@,uw-imap,g"            \
        -e "s,@logging@,internal,g"                 \
        -e 's,@timeout\@,180,g'                     \
        -e 's,@flush\@,30,g'                        \
        -e 's,@suspicious\@,12,g'                   \
        < "$1"                                      \
        > "$regdir/reg.conf"
}

cleanroom () {
    # remove and create the regression test directory
    rm -rf "$regdir"
    [ -d "$regdir" ] || {
        mkdir "$regdir"
        [ -d "$regdir" ] || exit 1
        mkdir -p "$regdir/run/exact" "$regdir/state/exact" "$regdir/log/exact"
    }
    
    export pkgdatadir=$regdir
    export prefix=$regdir
    export localstatedir=$regdir
    export sysconfdir=$regdir
    export username=`id -un`
    export groupname=`id -gn`
    export watchfile=$regdir/watch
    [ -z "$authtype" ] && export authtype=text
    mkconfig exact.conf.in
    cp exact-servers.conf $regdir
}

report() {
    if [ $? == 0 ]; then
        echo Test $1 Succeeded
    else
        echo Test $1 Failed
        exit
    fi
}

killexact () {
    kill `cat $regdir/run/exact/exact.pid` && sleep 1
}

runexact () {
    touch $watchfile
    rm $localstatedir/state/exact/relay
    if [ "$DEBUG" ]; then
        echo run -fdc $regdir/reg.conf > gdb-commands
        gdb ./exact -x gdb-commands &
    else
        ./exact -c $regdir/reg.conf &
    fi
    sleep 2
    pid=`cat $regdir/run/exact/exact.pid`
    kill -s 0 $pid || {
        echo "Error: exact not started"
        exit 1
    }
}

### Test 1
#
# Very basic.

test1 () {
    echo Starting Test 1
    authtype=text
    cleanroom
    runexact
    cat "td1-1" > $watchfile
    sleep 10
    killexact
    diff t/log/exact/exact.log tr1
    report 1
}

# test with a cyrus type log file

test1a () {
    echo Starting Test 1a
    authtype=text
    cleanroom
    mkconfig exact.conf.in.cyrus
    runexact
    cat "td1-2" > $watchfile
    sleep 10
    killexact
    diff t/log/exact/exact.log tr12
    report 1a
}

### Test 2
#
# 

test2 () {
    echo Starting Test 2
    authtype=text
    cleanroom
    runexact
    cat "td2-1" > $watchfile
    sleep 10
    cat "td2-2" >> $watchfile
    sleep 10
    killexact
    diff t/log/exact/exact.log tr2
    report 2
}

test3 () {
    echo Starting Test 3
    authtype=text
    cleanroom
    ./exact -pc $regdir/reg.conf
    sleep 2
    cat "td2-1" > $watchfile
    sleep 10
    rm $watchfile
    sleep 30
    cat "td2-2" >> $watchfile
    sleep 10
    killexact
    diff t/log/exact/exact.log tr3
    report 3
}

test4 () {
    echo Starting Test 4
    authtype=text
    cleanroom
    rm -f $watchfile
    ./exact -pc $regdir/reg.conf
    sleep 2
}

### Test 5 
#
# berkeley db

test5 () {
    echo Starting Test 5
    authtype=db
    cleanroom
    runexact
    cat "td1-1" > $watchfile
    sleep 5
    killexact
    diff t/log/exact/exact.log tr1
    report 5
}

test1
test1a
test2
test3
test4
test5

